<%= header(pg) %>
<%
  linkStr = lambda { |page, key|
    if key
      link_and_modified( page, { 'em' => key } )
    else
      link_and_modified( page )
    end
  }
  keywords = var( 'key' )
  keyword = keywords ? keywords[0] : ''
%>
<%= navi(pg) %>
<%= body(pg) %>

<form action="<%= form_action() %>" method="get" class="search">
<div class="search">
<%= form_hidden('search') %>
<input name="key" type="text" value="<%= h(keyword) %>" size="55" <%=tabindex%> />
<input name="submit" type="submit" value="<%=s_("button|search")%>" <%=tabindex%> />
</div>
</form>

<%
  if ( keyword and ( not keyword.empty? ))
    title_found = if pg.book.include_name?( keyword )
        [ pg.book[ keyword ] ]
      else
        pg.book.search_title( Regexp.new( '^' << Regexp.escape( keyword ),
          Regexp::IGNORECASE ))
      end
    body_found = pg.book.find_body( keyword )
%>

<%
    unless title_found.empty?
%>
<hr />
<p>
<%=sprintf(_("Title: '%s' found."), h(keyword))%>
</p>

<div class="tree">
<ul>
<li><%= linkStr.call(title_found[0], keyword) %>
<ul>
<li><a href="<%= ref_name('like', 'key' => keyword) %>"><%=_("more ...")%></a></li>
</ul></li>
</ul>
</div>
<%
    end
%>
<hr />
<p>
<%= sprintf(n_("Keyword: '%s' is found in %d page / %d pages.",
               "Keyword: '%s' is found in %d pages / %d pages.",
               body_found.size),
            h(keyword), body_found.size, pg.book.size) %>
</p>

<%
    unless body_found.empty?
%><div class="tree">
<ol>
<%
      body_found.sort.each do |page|
%><li><%= linkStr.call(page, keyword) %></li>
<%
      end
%></ol>
</div><%
    end
  end
%>

<%= footer(pg) %>
